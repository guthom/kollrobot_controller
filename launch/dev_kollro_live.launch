<launch>  

<!-- robot_ip: IP-address of the robot's socket-messaging server -->
  <!--arg name="robot_ip" default="172.22.222.111"/-->
  <arg name="robot_ip" default="172.22.222.50"/>
  <arg name="limited" default="true"/>
  <arg name="min_payload"  default="0.0"/>
  <arg name="max_payload"  default="10.0"/>
  <arg name="prefix" default="" />
  <arg name="sim" default="false" />
  <arg name="db" default="false" />
  <arg name="config" default="true" />
  <arg name="debug" default="false" />
  
  
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_tf" args="0 0 0 0 0 0 1 /world /map"/>    
  

  <!--//////////////////////// Modern ur10 driver///////////////////////////////////////-->
  <!-- robot model -->
  <include file="$(find ur_description)/launch/ur10_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>
  
  <!-- ur common -->
  <include file="$(find ur_modern_driver)/launch/ur_common.launch">
    <arg name="robot_ip" value="$(arg robot_ip)"/>
    <arg name="min_payload"  value="$(arg min_payload)"/>
    <arg name="max_payload"  value="$(arg max_payload)"/>
    <arg name="servoj_time"  value="0.08" />
  </include>
  <!--///////////////////////////////////////////////////////////////////////////////-->
  
    <include file="$(find ur_description)/launch/ur10_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>

  
  <node name="kollrobot_controller" pkg="kollrobot_controller" type="kollrobot_controller" output="screen">    
    <rosparam command="load" file="$(find kollrobot_controller)/yaml/kollrobot_controller.yaml" />
    <param name="SimMode" type="bool" value="false" />
    <param name="DemoMode" type="bool" value="false" />
    <param name="DemoUR10Mode" type="bool" value="false" />
    <param name="NormalMode" type="bool" value="true" />
  </node>

  <!-- Launch moveit -->
  <include file="$(find ur10_moveit_config)/launch/move_group.launch">
    <arg name="limited" default="$(arg limited)"/>
    <arg name="debug" default="$(arg debug)" />
  </include>
  
  <!-- Remap follow_joint_trajectory -->
  <remap from="/follow_joint_trajectory" to="/arm_controller/follow_joint_trajectory"/>
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />
  
 <!-- launch realsense-->
  <arg name="width" default="1280"/>
  <arg name="height" default="720"/> 
   
    <!--node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_tf2" args="-0.04570664 0.10452091 -0.05946044 -0.692256815409 -0.0110600966582 -0.0191038082984 0.72131353813 /world /camera_link_temp"/-->    
     <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_tf2" args="-0.04570664 -0.80452091 -0.05946044 -0.692256815409 -0.0110600966582 -0.0191038082984 0.72131353813 /world /camera_link_temp"/>    
    <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_tf1" args="0 0 0 0.5 -0.5 0.5 0.5 /camera_link_temp camera_link"/>    
     <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
        <arg name="camera"            value="depthcam1"/>
        <arg name="serial_no"           value=""/>
        <!--arg name="json_file_path"      value="/home/thomas/ROS/RealSensCfg/highaccuracy.json"/-->     
        <arg name="depth_width"       value="$(arg width)"/>
        <arg name="depth_height"      value="$(arg height)"/>
        <arg name="infra1_width"      value="$(arg width)"/>
        <arg name="infra1_height"     value="$(arg height)"/>
        <arg name="infra2_width"      value="$(arg width)"/>
        <arg name="infra2_height"     value="$(arg height)"/>
        <arg name="color_width"       value="$(arg width)"/>
        <arg name="color_height"      value="$(arg height)"/>
    </include>

  <include file="$(find qrcode_referencer)/launch/qrcode_referencer.launch">
  </include>
    
  <arg name="rviz_cfg" default="$(find kollrobot_controller)/rvizcfg/kollrobot_controller.rviz" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_cfg)">
  </node>	
  </launch>
