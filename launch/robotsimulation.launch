<launch>	
  <!--Launch everything related to the ur10 Robot--> 
  <!--rosparam command="load" file="$(arg kollrobot)/config/kinematics.yaml"/-->
  <!--include file="$(arg Launchfile_Dir)ur10_gazebo.launch/
  <include file="$(find kollrobot_moveit_config)/launch/newDemo.launch">
    <arg name="sim" value="true"/>
    <arg name="limited" value="true"/
  </include>-->  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />
  <include file="$(find kollrobot_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="publish_monitored_planning_scene" value="true" />
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

<!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find kollrobot_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen"/>
</launch>
	